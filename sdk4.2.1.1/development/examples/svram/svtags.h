/*
//       This include file was generated by tags2h
//       (do not edit this file)
*/
#ifndef SVTAGS_H
#define SVTAGS_H


/* sv_clib.c        */ void jpeg_alphamixer(sv_handle * sv, int argc, char ** argv);
/* sv_clib.c        */ void jpeg_analogoutput(sv_handle * sv, int argc, char **argv);
/* sv_clib.c        */ void jpeg_analog(sv_handle * sv, int argc, char **argv);
/* sv_clib.c        */ void jpeg_anccomplete(sv_handle * sv, int argc, char ** argv);
/* sv_clib.c        */ void jpeg_ancgenerator(sv_handle * sv, int argc, char ** argv);
/* sv_clib.c        */ void jpeg_ancreader(sv_handle * sv, int argc, char ** argv);
/* sv_clib.c        */ void jpeg_audioaesrouting(sv_handle * sv, int argc, char ** argv);
/* sv_clib.c        */ void jpeg_audioaessource(sv_handle * sv, int argc, char ** argv);
/* sv_clib.c        */ void jpeg_audioanalogout(sv_handle * sv, int argc, char ** argv);
/* sv_clib.c        */ void jpeg_audiochannels(sv_handle * sv, char * what);
/* sv_clib.c        */ void jpeg_audiofrequency(sv_handle * sv, char * what);
/* sv_clib.c        */ void jpeg_audioinput(sv_handle * sv, char * what);
/* sv_clib.c        */ void jpeg_audiomaxaiv(sv_handle * sv, char * what);
/* sv_clib.c        */ void jpeg_audiomode(sv_handle * sv, char * what);
/* sv_clib.c        */ void jpeg_audiomute(sv_handle * sv, char * what);
/* sv_clib.c        */ void jpeg_audionofading(sv_handle * sv, char * what);
/* sv_clib.c        */ void jpeg_audio_speed_compensation(sv_handle * sv, char * what);
/* sv_clib.c        */ void jpeg_autopulldown(sv_handle * sv, int argc, char ** argv);
/* sv_clib.c        */ void jpeg_black(sv_handle * sv);
/* sv_fm.c        */ int jpeg_closemapping(void);
/* sv_clib.c        */ void jpeg_close(sv_handle * sv);
/* sv_clib.c        */ void jpeg_colorbar(sv_handle * sv);
/* sv_compare.c        */ int jpeg_compare(sv_handle * sv, char * cmd, unsigned char * buffer, int size, int xsizevideo, int xsize, int ysize, int frame, int nframes, int mode);
/* sv_fm.c        */ int jpeg_convertimage(sv_handle * sv, int loadimage, char * file, char * type, int page, int xsize, int ysize, ubyte * buffer, int size, int bpc, int cmode, int fieldmode, int nbit, int fieldcount, int bottom2top, int xsizevideo, int *with_key);
/* sv_fm.c        */ int jpeg_createmapping(int  ProcessId );
/* sv_clib.c        */ void jpeg_croppingmode(sv_handle * sv, int argc, char ** argv);
/* sv_clib.c        */ void jpeg_debugoption(sv_handle * sv, int argc, char ** argv);
/* sv_clib.c        */ void jpeg_debugprint(sv_handle * sv, int infinite);
/* sv_clib.c        */ void jpeg_debug(sv_handle * sv, int value);
/* sv_clib.c        */ void jpeg_debugvalue(sv_handle * sv, int value);
/* sv_clib.c        */ void jpeg_disableswitchingline(sv_handle * sv, int argc, char ** argv);
/* sv_clib.c        */ void jpeg_display(sv_handle * sv, char * type, char * filename, int start, int nframes, char * tc);
/* sv_clib.c        */ int jpeg_dominance(sv_handle * sv, int argc, char ** argv);
/* sv_clib.c        */ void jpeg_dropmode(sv_handle * sv, char * what);
/* sv_clib.c        */ void jpeg_dvi(sv_handle * sv, int argc, char **argv);
/* sv_clib.c        */ void jpeg_errorcode(sv_handle * sv, int res, int argc, char ** argv);
/* sv_clib.c        */ void jpeg_errorprintf(sv_handle * sv, char * string, ...);
/* sv_clib.c        */ void jpeg_errorprint(sv_handle * sv, int res);
/* sv_fm.c        */ void jpeg_exchange_channel(ubyte * to_buffer, ubyte * from_buffer, int size, int colormode, int bpc, int channel);
/* sv_clib.c        */ void jpeg_fastmode(sv_handle * sv, char * what);
/* sv_clib.c        */ void jpeg_fifo_memorymode(sv_handle * sv, char* mode, char* size);
/* sv_fm.c        */ int jpeg_filestreamer(sv_handle * sv, int write, char * name, char * buffer, int size, int field1size, int field2size, int xsize, int ysize, int nbits, int nbits10dvs);
/* sv_clib.c        */ void jpeg_forcerasterdetect(sv_handle * sv, int argc, char **argv);
/* sv_clib.c        */ void jpeg_framesync(sv_handle * sv, char * what);
/* sv_clib.c        */ void jpeg_goto(sv_handle * sv, int argc, char ** argv);
/* sv_clib.c        */ void jpeg_gpi(sv_handle * sv, int argc, char ** argv);
/* sv_clib.c        */ void jpeg_guiinfo_init(sv_handle * sv, sv_info * info);
/* sv_clib.c        */ void jpeg_guiinfo_menu(sv_handle * sv);
/* sv_clib.c        */ void jpeg_guiinfo(sv_handle * sv, char * what);
/* sv_clib.c        */ void jpeg_hdmioutput(sv_handle * sv, char * param, char * subparam);
/* sv_fm.c        */ void jpeg_host2isp(sv_handle * sv, char * cmd, char * type, char * filename, int page, int start, int nframes, char * channels);
/* sv_clib.c        */ void jpeg_hwwatchdog(sv_handle * sv,  int argc, char ** argv);
/* sv_clib.c        */ void jpeg_info_card(sv_handle * sv);
/* sv_clib.c        */ void jpeg_info_clock(sv_handle * sv);
/* sv_clib.c        */ void jpeg_info_closedcaption(sv_handle * sv);
/* sv_clib.c        */ void jpeg_info_hardware(sv_handle * sv);
/* sv_clib.c        */ void jpeg_info_input(sv_handle * sv);
/* sv_clib.c        */ void jpeg_info_publickey(sv_handle * sv);
/* sv_clib.c        */ void jpeg_info_random(sv_handle * sv);
/* sv_clib.c        */ void jpeg_info(sv_handle * sv);
/* sv_clib.c        */ void jpeg_info_timecode(sv_handle * sv , char* choice);
/* sv_clib.c        */ void jpeg_inpoint(sv_handle * sv, int inpoint);
/* sv_clib.c        */ void jpeg_inputport(sv_handle * sv, char * what);
/* sv_clib.c        */ void jpeg_iomode(sv_handle * sv, char * what, char * param2);
/* sv_clib.c        */ void jpeg_iospeed(sv_handle * sv, char * what);
/* sv_fm.c        */ void jpeg_isp2host(sv_handle * sv, char * cmd, char * type, char * filename, int page, int start, int nframes, char * channels);
/* sv_clib.c        */ void jpeg_jack(sv_handle * sv, int argc, char ** argv);
/* sv_clib.c        */ void jpeg_licence(sv_handle * sv, int argc, char ** argv);
/* sv_clib.c        */ void jpeg_linkencrypt(sv_handle * sv, int argc, char ** argv);
/* sv_clib.c        */ void jpeg_live(sv_handle * sv, char * showmode);
/* sv_clib.c        */ void jpeg_ltc(sv_handle * sv, int argc, char ** argv);
/* sv_clib.c        */ void jpeg_lut(sv_handle * sv, int argc, char ** argv);
/* sv_clib.c        */ void jpeg_mainoutput(sv_handle * sv, int argc, char ** argv);
/* sv_clib.c        */ int jpeg_master(sv_handle * sv, int argc, char ** argv);
/* sv_clib.c        */ void jpeg_matrix(sv_handle * sv, int argc, char ** argv);
/* sv_clib.c        */ void jpeg_memsetup(sv_handle * sv, int argc, char ** argv);
/* sv_clib.c        */ void jpeg_mixer(sv_handle * sv, int argc, char ** argv);
/* sv_clib.c        */ void jpeg_mode(sv_handle * sv, char * videomode);
/* sv_clib.c        */ void jpeg_monitorinfo(sv_handle * sv, int argc, char ** argv);
/* sv_clib.c        */ void jpeg_multichannel(sv_handle * sv, int argc, char ** argv);
/* sv_clib.c        */ sv_handle * jpeg_open(int hideerror, int infodevice);
/* sv_clib.c        */ void jpeg_option(sv_handle * sv, int argc, char **argv);
/* sv_clib.c        */ void jpeg_outpoint(sv_handle * sv, int outpoint);
/* sv_clib.c        */ void jpeg_outputport(sv_handle * sv, char * what);
/* sv_clib.c        */ void jpeg_pause(sv_handle * sv);
/* sv_clib.c        */ void jpeg_preset(sv_handle * sv, char * preset);
/* sv_clib.c        */ void jpeg_proxy(sv_handle * sv, int argc, char ** argv);
/* sv_clib.c        */ void jpeg_pulldown(sv_handle * sv, int argc, char ** argv);
/* sv_clib.c        */ int jpeg_read_line(int path, char * buffer);
/* sv_clib.c        */ void jpeg_recordmode(sv_handle * sv, int argc, char ** argv);
/* sv_clib.c        */ void jpeg_record(sv_handle * sv, char * type, char * filename, int start, int nframes, char * tc, char * speed, char * loopmode);
/* sv_clib.c        */ void jpeg_render(sv_handle * sv, int argc, char ** argv);
/* sv_clib.c        */ void jpeg_repeat(sv_handle * sv, char * what);
/* sv_clib.c        */ void jpeg_routing(sv_handle * sv, int argc, char ** argv);
/* sv_clib.c        */ void jpeg_rp165(sv_handle * sv, int argc, char ** argv);
/* sv_clib.c        */ int jpeg_rs422pinout(sv_handle * sv, int argc, char ** argv);
/* sv_clib.c        */ void jpeg_rs422(sv_handle * sv, int argc, char ** argv);
/* sv_sequence.c        */ int jpeg_sequence(sv_handle * sv, int argc, char ** argv);
/* sv_clib.c        */ void jpeg_showlicence(sv_handle * sv);
/* sv_clib.c        */ void jpeg_slaveinfo(sv_handle * sv, int argc, char ** argv);
/* sv_clib.c        */ void jpeg_slave(sv_handle * sv, char * what);
/* sv_clib.c        */ void jpeg_slowmotion(sv_handle * sv, char * what);
/* sv_clib.c        */ void jpeg_speed(sv_handle * sv, char * speed, char * loopmode);
/* sv_clib.c        */ void jpeg_step(sv_handle * sv, char * step);
/* sv_clib.c        */ void jpeg_stop(sv_handle * sv);
/* sv_clib.c        */ void jpeg_storageinfo_show(sv_storageinfo * psi);
/* sv_clib.c        */ int jpeg_support_string2videomode(sv_handle * sv, char * videomode);
/* sv_clib.c        */ int jpeg_support_videomode2string(sv_handle * sv, char * buffer, int mode);
/* sv_clib.c        */ void jpeg_syncout(sv_handle * sv, int argc, char ** argv);
/* sv_clib.c        */ void jpeg_sync(sv_handle * sv, int argc, char ** argv);
/* sv_clib.c        */ void jpeg_test(sv_handle * sv, int argc, char ** argv);
/* sv_clib.c        */ void jpeg_timecode(sv_handle * sv, int argc, char ** argv);
/* sv_clib.c        */ void jpeg_trace(sv_handle * sv, char * pvalue);
/* sv_fm.c        */ void jpeg_transfer_abort(int signal);
/* sv_clib.c        */ void jpeg_version(sv_handle * sv, int argc, char ** argv);
/* sv_clib.c        */ void jpeg_vgui_feedback(sv_handle * sv, char c);
/* sv_clib.c        */ void jpeg_vitcline(sv_handle * sv, int argc, char ** argv);
/* sv_clib.c        */ void jpeg_vitcreaderline(sv_handle * sv, char * what);
/* sv_clib.c        */ void jpeg_vtredit(sv_handle * sv, char * tc, int nframes);
/* sv_clib.c        */ void jpeg_watermark(sv_handle * sv, int argc, char ** argv);
/* sv_clib.c        */ void jpeg_wordclock(sv_handle * sv, int argc, char ** argv);
/* sv_clib.c        */ void jpeg_zoom(sv_handle * sv, int argc, char ** argv);
/* sv_main.c        */ int user_date(int argc, char ** argv) ;
/* sv_main.c        */ int user_help(int argc, char ** argv);
/* sv_main.c        */ int user_parse(sv_handle * sv, int argc, char ** argv);
/* sv_main.c        */ int user_pipe(sv_handle * sv);

#endif
